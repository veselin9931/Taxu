{"version":3,"sources":["webpack:///src/app/account/register/register.module.ts","webpack:///src/app/account/register/register.page.scss","webpack:///src/app/account/register/register.page.html","webpack:///src/app/account/register/register-routing.module.ts","webpack:///src/app/account/register/register.page.ts"],"names":["HttpLoaderFactory","http","RegisterPageModule","imports","forChild","loader","provide","useFactory","deps","declarations","routes","path","component","RegisterPageRoutingModule","exports","RegisterPage","route","formBuilder","accountService","alertService","driverService","translate","popoverController","alertController","submitted","loading","err","setDefaultLang","form","group","firstName","required","lastName","username","password","confirmPassword","phone","referral","validators","ConfirmedValidator","connection","configureLogging","Information","withUrl","signalRUrl","build","start","then","console","log","toString","controls","valid","register","value","pipe","subscribe","data","presentAlert","navigate","error","ev","create","event","popover","present","controlName","matchingControlName","formGroup","control","matchingControl","errors","confirmedValidator","setErrors","cssClass","header","message","buttons","alert","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeO,eAASA,iBAAT,CAA2BC,IAA3B,EAA6C;AAClD,eAAO,IAAI,8EAAJ,CAAwBA,IAAxB,CAAP;AACD;;UAoBYC,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAlB9B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,0DAHO,EAIP,0DAJO,EAKP,kFALO,EAMP,oEAAgBC,QAAhB,CAAyB;AACvBC,gBAAM,EAAE;AACNC,mBAAO,EAAE,mEADH;AAENC,sBAAU,EAAEP,iBAFN;AAGNQ,gBAAI,EAAE,CAAC,+DAAD;AAHA;AADe,SAAzB,CANO,EAaP,oGAbO,CADD;AAgBRC,oBAAY,EAAE,CAAC,2DAAD;AAhBN,OAAT,CAkB8B,GAAlBP,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACrCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMQ,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRV,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBM,MAAtB,CAAD,CADD;AAERI,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBD,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAE,YAAY;AAMvB,8BAAoBC,KAApB,EACUC,WADV,EAEUC,cAFV,EAGUC,YAHV,EAIUC,aAJV,EAKUC,SALV,EAMUC,iBANV,EAOUC,eAPV,EAO4C;AAAA;;AAPxB,eAAAP,KAAA,GAAAA,KAAA;AACV,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAZV,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,OAAA,GAAU,KAAV;AAEA,eAAAC,GAAA,GAAM,EAAN;AAS8C,eAAKL,SAAL,CAAeM,cAAf,CAA8B,IAA9B;AAAsC;;AAb7D;AAAA;AAAA,iBAiBvB,oBAAW;AACT,iBAAKC,IAAL,GAAY,KAAKX,WAAL,CAAiBY,KAAjB,CAAuB;AACjCC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADsB;AAEjCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFuB;AAGjCE,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHuB;AAIjCG,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAJuB;AAKjCI,6BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CALgB;AAMjCK,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAN0B;AAOjCM,sBAAQ,EAAE,CAAC,EAAD;AAPuB,aAAvB,EAST;AACDC,wBAAU,EAAE,KAAKC,kBAAL,CAAwB,UAAxB,EAAoC,iBAApC;AADX,aATS,CAAZ;AAeA,gBAAMC,UAAU,GAAG,IAAI,oEAAJ,GAChBC,gBADgB,CACC,yDAAiBC,WADlB,EAEhBC,OAFgB,WAEL,0EAAYC,UAFP,gBAGhBC,KAHgB,EAAnB;AAKAL,sBAAU,CAACM,KAAX,GAAmBC,IAAnB,CAAwB,YAAY;AAClCC,qBAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,aAFD,WAES,UAAUvB,GAAV,EAAe;AACtB,qBAAOsB,OAAO,CAACC,GAAR,CAAYvB,GAAG,CAACwB,QAAJ,EAAZ,CAAP;AACD,aAJD;AAOD;AA7CsB;AAAA;AAAA,eA+CvB,eAAQ;AAAE,mBAAO,KAAKtB,IAAL,CAAUuB,QAAjB;AAA4B;AA/Cf;AAAA;AAAA,iBAiDvB,oBAAW;AAAA;;AACT,iBAAK3B,SAAL,GAAiB,IAAjB;;AAEA,gBAAI,CAAC,KAAKI,IAAL,CAAUwB,KAAf,EAAsB;AACpB;AACD;;AAED,iBAAK3B,OAAL,GAAe,IAAf;AACA,iBAAKP,cAAL,CAAoBmC,QAApB,CAA6B,KAAKzB,IAAL,CAAU0B,KAAvC,EACGC,IADH,CACQ,8DADR,EAEGC,SAFH,CAGI,UAAAC,IAAI,EAAI;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,mBAAI,CAACC,YAAL;;AACA,mBAAI,CAAC1C,KAAL,CAAW2C,QAAX,CAAoB,CAAC,WAAD,CAApB;;AACAX,qBAAO,CAACC,GAAR,CAAYQ,IAAZ;AACD,aAnBL,EAoBI,UAAAG,KAAK,EAAI;AAEPZ,qBAAO,CAACC,GAAR,CAAYW,KAAK,CAACA,KAAlB;AACA,mBAAI,CAAClC,GAAL,GAAWkC,KAAK,CAACA,KAAjB;AAEA,mBAAI,CAACnC,OAAL,GAAe,KAAf;AACD,aA1BL;AA4BD;AArFsB;AAAA;AAAA,iBAuFvB,kBAAS;AACP,iBAAKT,KAAL,CAAW2C,QAAX,CAAoB,CAAC,WAAD,CAApB;AACD;AAzFsB;AAAA;AAAA,iBA2FvB,kBAAS;AACP,iBAAK3C,KAAL,CAAW2C,QAAX,CAAoB,CAAC,WAAD,CAApB;AACD;AA7FsB;AAAA;AAAA,iBA+FjB,6BAAoBE,EAApB,EAAwB;;;;;;;;AACZ,6BAAM,KAAKvC,iBAAL,CAAuBwC,MAAvB,CAA8B;AAClDlD,iCAAS,EAAE,mGADuC;AAElDmD,6BAAK,EAAEF;AAF2C,uBAA9B,CAAN;;;AAAVG,6B;;AAIN,6BAAMA,OAAO,CAACC,OAAR,EAAN;;;;;;;;;AACD;AArGsB;AAAA;AAAA,iBAuGvB,4BAAmBC,WAAnB,EAAwCC,mBAAxC,EAAqE;AACnE,mBAAO,UAACC,SAAD,EAA0B;AAC/B,kBAAMC,OAAO,GAAGD,SAAS,CAACjB,QAAV,CAAmBe,WAAnB,CAAhB;AACA,kBAAMI,eAAe,GAAGF,SAAS,CAACjB,QAAV,CAAmBgB,mBAAnB,CAAxB;;AACA,kBAAIG,eAAe,CAACC,MAAhB,IAA0B,CAACD,eAAe,CAACC,MAAhB,CAAuBC,kBAAtD,EAA0E;AACxE;AACD;;AACD,kBAAIH,OAAO,CAACf,KAAR,KAAkBgB,eAAe,CAAChB,KAAtC,EAA6C;AAC3CgB,+BAAe,CAACG,SAAhB,CAA0B;AAAED,oCAAkB,EAAE;AAAtB,iBAA1B;AACD,eAFD,MAEO;AACLF,+BAAe,CAACG,SAAhB,CAA0B,IAA1B;AACD;AACF,aAXD;AAYD;AApHsB;AAAA;AAAA,iBAsHjB,wBAAe;;;;;;;;AACL,6BAAM,KAAKlD,eAAL,CAAqBuC,MAArB,CAA4B;AAC9CY,gCAAQ,EAAE,iBADoC;AAE9CC,8BAAM,EAAE,0BAFsC;AAG9CC,+BAAO,EAAE,wBAHqC;AAI9CC,+BAAO,EAAE,CAAC,IAAD;AAJqC,uBAA5B,CAAN;;;AAARC,2B;;AAON,6BAAMA,KAAK,CAACb,OAAN,EAAN;;;;;;;;;AACD;AA/HsB;;AAAA;AAAA,S;;;;gBAfhB;;gBADA;;gBAQA;;gBAAgB;;gBAChB;;gBALA;;gBADiB;;gBAAjB;;;;AAaIlD,kBAAY,6DALxB,gEAAU;AACTgE,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR,sEAFS;;AAAA,OAAV,CAKwB,GAAZjE,YAAY,CAAZ","file":"account-register-register-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { LanguagePopoverPageModule } from '../../language-popover/language-popover.module';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    LanguagePopoverPageModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \"ion-content {\\n  --ion-background-color:#e9e9e9;\\n}\\n\\nion-toolbar {\\n  --ion-background-color:#eeeeee;\\n}\\n\\nion-title {\\n  text-align: center;\\n}\\n\\n#toolbarIcon {\\n  font-size: 1.7em;\\n}\\n\\n.fonted {\\n  font-family: Open Sans Light;\\n}\\n\\n.text {\\n  font-size: 2.4em;\\n  font-family: Open Sans Light;\\n}\\n\\n.reg {\\n  margin-top: 20px;\\n}\\n\\nion-input {\\n  border-radius: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxyZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtBQUNKOztBQUVBO0VBQ0ksOEJBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKOztBQUNBO0VBQ0ksNEJBQUE7QUFFSjs7QUFFQTtFQUNJLGdCQUFBO0VBQ0EsNEJBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKIiwiZmlsZSI6InJlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojZTllOWU5O1xyXG59XHJcblxyXG5pb24tdG9vbGJhcntcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6I2VlZWVlZTtcclxufVxyXG5cclxuaW9uLXRpdGxlIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuI3Rvb2xiYXJJY29ue1xyXG4gICAgZm9udC1zaXplOiAxLjdlbTtcclxufVxyXG4uZm9udGVke1xyXG4gICAgZm9udC1mYW1pbHk6IE9wZW4gU2FucyBMaWdodDtcclxufVxyXG5cclxuXHJcbi50ZXh0eyAgXHJcbiAgICBmb250LXNpemU6IDIuNGVtO1xyXG4gICAgZm9udC1mYW1pbHk6IE9wZW4gU2FucyBMaWdodDtcclxufVxyXG5cclxuLnJlZ3tcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbmlvbi1pbnB1dCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG59XHJcbiAgICAiXX0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>\\r\\n        <ion-label>Register</ion-label>\\r\\n    </ion-title>\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-icon (click)='openLanguagePopover($event)' id=\\\"toolbarIcon\\\" name=\\\"language-outline\\\"></ion-icon>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding class=\\\"background\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n      </div>\\r\\n      <ion-text class=\\\"text-center\\\" color=\\\"dark\\\">\\r\\n        <!-- <div class=\\\"col-md-5 mt-3\\\">\\r\\n          <h2 class=\\\"text\\\">\\r\\n            {{'Register' | translate}}\\r\\n          </h2>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"row text-center\\\">\\r\\n            <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate class=\\\"col-md-6\\\">\\r\\n\\r\\n                <ion-text *ngIf=\\\"err\\\" color=\\\"danger\\\">\\r\\n                    <div class=\\\"text-center\\\">{{err}}</div>\\r\\n                </ion-text>\\r\\n\\r\\n                <div class=\\\"form-group col mt-5\\\">\\r\\n                    <ion-input formControlName=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]='\\\"First Name\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\">\\r\\n                    </ion-input>\\r\\n                    <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.firstName.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col mt-3\\\">\\r\\n                    <ion-input formControlName=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]='\\\"Last Name\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\">\\r\\n                    </ion-input>\\r\\n\\r\\n                    <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.lastName.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col mt-3\\\">\\r\\n                    <ion-input formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]='\\\"Email\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"></ion-input>\\r\\n\\r\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.username.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col mt-3\\\">\\r\\n                    <ion-input formControlName=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]='\\\"Phone Number\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.phone.errors }\\\">\\r\\n                    </ion-input>\\r\\n                    <div *ngIf=\\\"submitted && f.phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.phone.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col mt-3\\\">\\r\\n                    <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" [placeholder]='\\\"Password\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\r\\n                    </ion-input>\\r\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.password.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col mt-3\\\">\\r\\n                    <ion-input formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" [placeholder]='\\\"Confirm Password\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\">\\r\\n                    </ion-input>\\r\\n                    <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.confirmPassword.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                        <div *ngIf=\\\"f.confirmPassword.errors.confirmedValidator\\\">{{'Password should match' | translate}}!</div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"form-group col mt-3\\\">\\r\\n                    <ion-input formControlName=\\\"referral\\\" type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]='\\\"Referral\\\" | translate'></ion-input>\\r\\n                </div> -->\\r\\n\\r\\n                <div class=\\\"col-md-12 mt-3\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-info\\\"> {{'Register' | translate}}</button>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-6 mt-3\\\">\\r\\n                <p class=\\\"fonted\\\">{{'Already have an account' | translate}}?</p>\\r\\n                <button (click)=\\\"signIn()\\\" type=\\\"submit\\\" class=\\\"btn btn-warning\\\">{{'Sign in' | translate}}</button>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n      </ion-text>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport * as signalR from '@aspnet/signalr';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { LanguagePopoverPage } from 'src/app/language-popover/language-popover.page';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AccountService, AlertService } from 'src/_services';\r\nimport { DriverService } from 'src/_services/driver/driver.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  submitted = false;\r\n  loading = false;\r\n  form: FormGroup;\r\n  err = '';\r\n\r\n  constructor(private route: Router,\r\n    private formBuilder: FormBuilder,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService,\r\n    private driverService: DriverService,\r\n    private translate: TranslateService,\r\n    private popoverController: PopoverController,\r\n    private alertController: AlertController) { this.translate.setDefaultLang('en'); }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n      phone: ['', Validators.required],\r\n      referral: ['']\r\n\r\n    }, {\r\n      validators: this.ConfirmedValidator('password', 'confirmPassword')\r\n    })\r\n\r\n\r\n\r\n    const connection = new signalR.HubConnectionBuilder()\r\n      .configureLogging(signalR.LogLevel.Information)\r\n      .withUrl(`${environment.signalRUrl}/orderHub`)\r\n      .build();\r\n\r\n    connection.start().then(function () {\r\n      console.log('signalR Connected in register');\r\n    }).catch(function (err) {\r\n      return console.log(err.toString());\r\n    });\r\n\r\n\r\n  }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (!this.form.valid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.accountService.register(this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          // this.driverService.getDriverByReferral(this.form.value.referral)\r\n          // .subscribe(driver => {\r\n          //   if(driver){\r\n          //     this.driverService.lowerDriverCommission(driver.id)\r\n          //     .subscribe(x => {\r\n          //       console.log(x)\r\n          //     })\r\n          //   }else{\r\n          //     console.log('The referral does not exists!')\r\n\r\n          //   }\r\n          // })\r\n          this.presentAlert();\r\n          this.route.navigate(['menu/home']);\r\n          console.log(data)\r\n        },\r\n        error => {\r\n\r\n          console.log(error.error);\r\n          this.err = error.error;\r\n\r\n          this.loading = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  signIn() {\r\n    this.route.navigate(['menu/home']);\r\n  }\r\n\r\n  goBack() {\r\n    this.route.navigate(['menu/home']);\r\n  }\r\n\r\n  async openLanguagePopover(ev) {\r\n    const popover = await this.popoverController.create({\r\n      component: LanguagePopoverPage,\r\n      event: ev\r\n    });\r\n    await popover.present();\r\n  }\r\n\r\n  ConfirmedValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n      if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n        return;\r\n      }\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ confirmedValidator: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  async presentAlert() {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Successfull registration',\r\n      message: 'Log in and book a car.',\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n"]}