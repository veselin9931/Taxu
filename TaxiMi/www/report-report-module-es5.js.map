{"version":3,"sources":["webpack:///src/_services/order/order.service.ts","webpack:///src/app/report/report.module.ts","webpack:///src/app/report/report-routing.module.ts","webpack:///src/app/report/report.page.scss","webpack:///src/app/report/report.page.html","webpack:///src/app/report/report.page.ts","webpack:///src/_services/report/report.service.ts"],"names":["OrderService","http","sharedService","orders","completedOrder","data","headers","headerGerneration","post","apiUrl","responseType","pipe","handleError","userId","get","orderId","console","log","JSON","stringify","locationLat","locationLng","destinationLat","destinationLng","id","order","driverId","put","value","amount","error","errorMessage","ErrorEvent","message","status","providedIn","HttpLoaderFactory","ReportPageModule","imports","forChild","loader","provide","useFactory","deps","declarations","routes","path","component","ReportPageRoutingModule","exports","ReportPage","reportService","route","formBuilder","driverService","accountService","location","orderService","alertController","translate","popoverController","subscriptions","submitted","loading","userValue","setDefaultLang","choosenLanguage","form","group","title","required","description","reporterId","suspectedUserId","typeId","controls","event","selectedReportType","push","getById","subscribe","u","isDriver","getLastCompletedOrder","x","lastOrder","applicationUserId","user","userFirstName","firstName","userLastName","lastName","acceptedBy","getDriverActiveCar","car","carModel","model","valid","createReport","report","reportCompleted","clearForm","ev","create","popover","present","header","buttons","text","handler","navigate","popup","reset","back","selector","template","ReportService"],"mappings":"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","file":"report-report-module-es5.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FavouriteOrder, Order } from 'src/_models';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  public selectedFavourite: FavouriteOrder;\r\n\r\n  public order: Order;\r\n  public orders = [];\r\n  public currentOrderId: string;\r\n\r\n  public driverId: string;\r\n  public completedOrder = false;\r\n  public alertForcomplete: string;\r\n\r\n  public chosenLocation: string;\r\n  public chosenDestination: string;\r\n\r\n  public userLocationLat: number;\r\n  public userLocationLong: number;\r\n\r\n  public userDestinationLat: number;\r\n  public userDestinationLong: number;\r\n\r\n\r\n  constructor(private http: HttpClient, private sharedService: SharedService) { }\r\n\r\n  public createOrder(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/order`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  addToFavourites(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/order/favourites`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMyFavourites(userId: string): Observable<FavouriteOrder[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<FavouriteOrder[]>(`${environment.apiUrl}/api/order/favourites/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteFavouriteOrder(orderId: string): Observable<FavouriteOrder> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.delete<FavouriteOrder>(`${environment.apiUrl}/api/order/favourites/${orderId}`, {headers})\r\n      .pipe(\r\n        tap(data => console.log('deleted favourite order: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public getDirections(locationLat, locationLng, destinationLat, destinationLng) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${locationLat},${locationLng}&destinations=${destinationLat}%2C${destinationLng}%7C&key=AIzaSyAEvlXdM4joG4bNVT5l-tJSk9lUSGhxMNw`, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getOrderById(id: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/id/${id}`, {headers})\r\n      .pipe(\r\n        tap(data => this.order = data)\r\n      );\r\n  }\r\n\r\n  getCanceledOrderById(id: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/canceled/${id}`, {headers})\r\n      .pipe(\r\n        tap(data => this.order = data)\r\n      );\r\n  }\r\n\r\n  getLastCompletedOrder(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/completed/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMyOrder(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getOrderForChat(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/chat/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  getNormalOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order/normal`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  getComfortOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order/comfort`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  acceptOrder(orderId: string, driverId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/${orderId}/${driverId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        tap(data => this.driverId = driverId),\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  updateOrderEta(orderId: string, value: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/eta/${orderId}/${value}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateDriverArrived(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/arrived/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  rateOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/rate/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  increaseOrderPrice(id: string, amount: number): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increase/${id}/${amount}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  completeOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  deleteOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.delete<Order>(`${environment.apiUrl}/api/order/${orderId}`, {headers})\r\n      .pipe(\r\n        tap(data => console.log('deleted order: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  driverIncreaseOrderPrice(orderId: string, amount: number, driverId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increased/${orderId}/${amount}/${driverId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  resetIncreasing(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/reset/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  increasedOrderAccept(orderId: string, value: boolean): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();;\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/accepted/increase/${orderId}/${value}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  incrementOrderPrice(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increment/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  decrementOrderPrice(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/decrement/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      console.log('Client side error.')\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      console.log('Server side error.')\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ReportPageRoutingModule } from './report-routing.module';\r\n\r\nimport { ReportPage } from './report.page';\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { LanguagePopoverPageModule } from '../language-popover/language-popover.module';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReportPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    LanguagePopoverPageModule\r\n  ],\r\n  declarations: [ReportPage]\r\n})\r\nexport class ReportPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ReportPage } from './report.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReportPageRoutingModule {}\r\n","export default \"ion-content {\\n  --ion-background-color:#e9e9e9;\\n}\\n\\n.centered {\\n  text-align: center;\\n}\\n\\n.text {\\n  font-family: Open Sans Light;\\n}\\n\\nhr {\\n  background: #eeeeee;\\n  width: 70% !important;\\n}\\n\\n.backIcon {\\n  color: #ffae00;\\n  font-size: 150%;\\n}\\n\\n.back {\\n  color: #ffae00;\\n}\\n\\nion-toolbar {\\n  --ion-background-color:#eeeeee;\\n}\\n\\nion-title {\\n  text-align: center;\\n}\\n\\n#toolbarIcon {\\n  font-size: 1.7em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHJlcG9ydC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSw4QkFBQTtBQUFKOztBQUdBO0VBQ0ksa0JBQUE7QUFBSjs7QUFHQTtFQUNJLDRCQUFBO0FBQUo7O0FBR0E7RUFDSSxtQkFBQTtFQUNBLHFCQUFBO0FBQUo7O0FBSUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQURKOztBQUlBO0VBQ0ksY0FBQTtBQURKOztBQUlBO0VBQ0ksOEJBQUE7QUFESjs7QUFJQTtFQUNJLGtCQUFBO0FBREo7O0FBSUE7RUFDSSxnQkFBQTtBQURKIiwiZmlsZSI6InJlcG9ydC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcclxuICAgIC8vLS1iYWNrZ3JvdW5kOiB1cmwoLi4vLi4vYXNzZXRzL3dwNDc5Mjc4MC1kYXJrLXBob25lLXdhbGxwYXBlcnMuanBnKSAwIDAvMTAwJSAxMDAlIG5vLXJlcGVhdDtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6I2U5ZTllOTtcclxuXHJcbn1cclxuLmNlbnRlcmVke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4udGV4dHtcclxuICAgIGZvbnQtZmFtaWx5OiBPcGVuIFNhbnMgTGlnaHQ7XHJcbn1cclxuXHJcbmhye1xyXG4gICAgYmFja2dyb3VuZDojZWVlZWVlO1xyXG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuLmJhY2tJY29uIHtcclxuICAgIGNvbG9yOiByZ2IoMjU1LCAxNzQsIDApO1xyXG4gICAgZm9udC1zaXplOiAxNTAlO1xyXG59XHJcblxyXG4uYmFjayB7XHJcbiAgICBjb2xvcjogcmdiKDI1NSwgMTc0LCAwKTtcclxufVxyXG5cclxuaW9uLXRvb2xiYXJ7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiNlZWVlZWU7XHJcbn1cclxuXHJcbmlvbi10aXRsZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiN0b29sYmFySWNvbntcclxuICAgIGZvbnQtc2l6ZTogMS43ZW07XHJcbn1cclxuIl19 */\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      \\r\\n  \\r\\n      <ion-title>\\r\\n          <ion-label>{{'Report' | translate}}</ion-label>\\r\\n      </ion-title>\\r\\n  \\r\\n      <ion-buttons slot=\\\"end\\\">\\r\\n        <ion-icon (click)='openLanguagePopover($event)' id=\\\"toolbarIcon\\\" name=\\\"language-outline\\\"></ion-icon>\\r\\n      </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n    \\r\\n  </ion-header>\\r\\n<ion-content padding class=\\\"background\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col text-center\\\">\\r\\n            <ion-text class=\\\"centered\\\" color=\\\"dark\\\">\\r\\n              <h2 class=\\\"text\\\">{{'Report a problem' | translate}}</h2>\\r\\n              <hr>\\r\\n            </ion-text>\\r\\n  \\r\\n            <form [formGroup]=\\\"form\\\" novalidate class=\\\"col-md-6\\\">\\r\\n  \\r\\n              <div class=\\\"form-group col mt-5 text-center\\\">\\r\\n                <select (change)=\\\"reportType($event.target.value)\\\" formControlName=\\\"typeId\\\" class=\\\"form-control text\\\" id=\\\"exampleFormControlSelect1\\\"\\r\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.typeId.errors }\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>{{'Choose report type' | translate}}</option>\\r\\n                  <option value=\\\"1\\\">{{'Complaint' | translate}}</option>\\r\\n                  <option value=\\\"2\\\">{{'Technical' | translate}}</option>\\r\\n                  <option value=\\\"3\\\">{{'Other' | translate}}</option>\\r\\n                </select>\\r\\n  \\r\\n                <div *ngIf=\\\"submitted && f.typeId.errors\\\" class=\\\"invalid-feedback text\\\">\\r\\n                  <div *ngIf=\\\"f.typeId.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <div *ngIf=\\\"selectedReportType == 1 \\\" class=\\\"form-group col mt-5 text-center text\\\">\\r\\n                <ion-text class=\\\"centered\\\" color=\\\"dark\\\">\\r\\n                  <h4 class=\\\"text\\\">{{'Last user' | translate}}</h4>\\r\\n                </ion-text>\\r\\n                <ion-input class=\\\"form-control\\\" value=\\\"{{userFirstName}} {{userLastName}}\\\"> \\r\\n                </ion-input>\\r\\n              </div>\\r\\n  \\r\\n  \\r\\n              <div class=\\\"form-group col mt-5\\\">\\r\\n                <ion-input formControlName=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control text\\\"\\r\\n                 [placeholder]='\\\"Title\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\">\\r\\n                </ion-input>\\r\\n                <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.title.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <div class=\\\"form-group col mt-5\\\">\\r\\n                <textarea formControlName=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control text\\\"\\r\\n                  [placeholder]='\\\"Description\\\" | translate' [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\">\\r\\n                </textarea>\\r\\n                <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.description.errors.required\\\">{{'The field is required' | translate}}!</div>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <div class=\\\"col-md-12 mt-3\\\">\\r\\n                <button (click)=\\\"onSubmit()\\\" class=\\\"btn btn-info\\\" type=\\\"button\\\" color=\\\"dark\\\">{{'Submit' | translate}}</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n  \\r\\n  </ion-content>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'src/_services';\r\nimport { DriverService } from 'src/_services/driver/driver.service';\r\nimport { ReportService } from 'src/_services/report/report.service';\r\nimport { Location } from '@angular/common';\r\nimport { Driver, Order } from 'src/_models';\r\nimport { OrderService } from 'src/_services/order/order.service';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LanguagePopoverPage } from '../language-popover/language-popover.page';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  templateUrl: './report.page.html',\r\n  styleUrls: ['./report.page.scss'],\r\n})\r\nexport class ReportPage implements OnInit {\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  driver: Driver;\r\n  userId: string;\r\n  form: FormGroup;\r\n  carModel: string;\r\n  lastOrder: Order;\r\n  driverId: string;\r\n  userLastName: string;\r\n  userFirstName: string;\r\n  selectedReportType: number;\r\n  suspectedUserId: string;\r\n  reporterId: string;\r\n  submitted = false;\r\n  loading = false;\r\n  isDriver: boolean;\r\n\r\n  constructor(private reportService: ReportService,\r\n    private route: Router,\r\n    private formBuilder: FormBuilder,\r\n    private driverService: DriverService,\r\n    private accountService: AccountService,\r\n    private location: Location,\r\n    private orderService: OrderService,\r\n    private alertController: AlertController,\r\n    private translate: TranslateService,\r\n    private popoverController: PopoverController) {\r\n    this.userId = this.accountService.userValue.id;\r\n    this.translate.setDefaultLang(this.accountService.userValue.choosenLanguage);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      reporterId: [''],\r\n      suspectedUserId: [''],\r\n      typeId: ['']\r\n    })\r\n  }\r\n\r\n  // ionViewDidLeave() {\r\n  //   for (const subscription of this.subscriptions) {\r\n  //     console.log(subscription)\r\n  //     subscription.unsubscribe();\r\n  //   }\r\n  // }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  reportType(event) {\r\n    this.selectedReportType = event;\r\n\r\n    if (this.selectedReportType == 1) {\r\n      this.subscriptions.push(this.accountService.getById(this.userId)\r\n        .subscribe(u => {\r\n          this.isDriver = u.isDriver;\r\n          if (u.isDriver) {\r\n            this.subscriptions.push(this.orderService.getLastCompletedOrder(this.userId)\r\n              .subscribe(x => {\r\n                this.lastOrder = x;\r\n                this.subscriptions.push(this.accountService.getById(x.applicationUserId)\r\n                  .subscribe(user => {\r\n                    this.userFirstName = user.firstName;\r\n                    this.userLastName = user.lastName;\r\n                    this.suspectedUserId = this.lastOrder.applicationUserId;\r\n                    this.reporterId = this.userId;\r\n                  }))\r\n              }));\r\n          } else {\r\n            this.subscriptions.push(this.orderService.getLastCompletedOrder(this.userId)\r\n              .subscribe(x => {\r\n                this.lastOrder = x;\r\n                this.subscriptions.push(this.accountService.getById(x.acceptedBy)\r\n                  .subscribe(user => {\r\n                    this.userFirstName = user.firstName;\r\n                    this.userLastName = user.lastName;\r\n                    this.subscriptions.push(this.driverService.getDriverActiveCar(user.driverId)\r\n                      .subscribe(car => {\r\n                        this.carModel = car.model;\r\n                        this.form.value.typeId = +this.form.value.typeId;\r\n                        this.suspectedUserId = user.driverId;\r\n                        this.reporterId = this.userId;\r\n                      }))\r\n\r\n                  }))\r\n              }));\r\n          }\r\n        }))\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (!this.form.valid) {\r\n      console.log('Please provide all the required values!')\r\n    } else {\r\n      this.form.value.typeId = +this.form.value.typeId;\r\n      if (this.form.value.typeId == 1) {\r\n        this.form.value.suspectedUserId = this.suspectedUserId;\r\n        this.form.value.reporterId = this.reporterId;\r\n\r\n        this.subscriptions.push(this.reportService.createReport(this.form.value)\r\n          .subscribe(report => {\r\n            console.log(\"report created:\");\r\n            console.log(report)\r\n            this.reportCompleted();\r\n            this.clearForm();\r\n          }))\r\n      } else {\r\n        this.form.value.reporterId = this.userId;\r\n        this.subscriptions.push(this.reportService.createReport(this.form.value)\r\n          .subscribe(report => {\r\n            console.log(\"report created:\");\r\n            console.log(report)\r\n            this.reportCompleted();\r\n            this.clearForm();\r\n          }))\r\n      }\r\n\r\n      console.log(this.form.value);\r\n    }\r\n  }\r\n\r\n  async openLanguagePopover(ev) {\r\n    const popover = await this.popoverController.create({\r\n      component: LanguagePopoverPage,\r\n      event: ev\r\n    });\r\n    await popover.present();\r\n  }\r\n\r\n  async reportCompleted() {\r\n    const popup = await this.alertController.create({\r\n      header: 'Report',\r\n      message: 'Your report is sent successfully',\r\n      buttons: [\r\n        {\r\n          text: 'Confirm',\r\n          handler: data => {\r\n            if (this.isDriver == true) {\r\n              this.route.navigate(['menu/driving']);\r\n\r\n            } else {\r\n              this.route.navigate(['menu/travelling']);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await popup.present();\r\n\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({\r\n      'title': '',\r\n      'description': '',\r\n      'typeId': '',\r\n      'suspectedDriverId': '',\r\n      'reporterId': '',\r\n    })\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient, private sharedService: SharedService) { }\r\n\r\n  public createReport(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/report`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      console.log('Client side error.')\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      console.log('Server side error.')\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"]}