{"version":3,"sources":["./src/_services/order/order.service.ts","./src/_services/trip/trip.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA+D;AACpB;AACG;AACG;AACU;AAEF;IAK5C,YAAY,SAAZ,YAAY;IAqBvB,YAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAjBnE,WAAM,GAAG,EAAE,CAAC;QAIZ,mBAAc,GAAG,KAAK,CAAC;IAagD,CAAC;IAExE,WAAW,CAAC,IAAI;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,wEAAW,CAAC,MAAM,YAAY,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aAC9F,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,wEAAW,CAAC,MAAM,uBAAuB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACzG,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,wEAAW,CAAC,MAAM,yBAAyB,MAAM,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aACtG,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,OAAe;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAiB,GAAG,wEAAW,CAAC,MAAM,yBAAyB,OAAO,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aACxG,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAC3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAEM,aAAa,CAAC,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc;QAC3E,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mFAAmF,WAAW,IAAI,WAAW,iBAAiB,cAAc,MAAM,cAAc,iDAAiD,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACxQ,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,YAAY,CAAC,EAAU;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,iBAAiB,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aAC/E,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAC/B,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,uBAAuB,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aACrF,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAC/B,CAAC;IACN,CAAC;IAED,qBAAqB,CAAC,MAAc;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,wBAAwB,MAAM,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aAC1F,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,cAAc,MAAM,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aAChF,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,mBAAmB,MAAM,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aACrF,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,YAAY;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,wEAAW,CAAC,MAAM,YAAY,EAAE,EAAC,OAAO,EAAC,CAAC;aACxE,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACL,CAAC;IAED,eAAe;QACb,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,wEAAW,CAAC,MAAM,mBAAmB,EAAE,EAAC,OAAO,EAAC,CAAC;aAC/E,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACL,CAAC;IAED,gBAAgB;QACd,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,wEAAW,CAAC,MAAM,oBAAoB,EAAE,EAAC,OAAO,EAAC,CAAC;aAChF,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACL,CAAC;IAED,WAAW,CAAC,OAAe,EAAE,QAAgB;QAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,cAAc,OAAO,IAAI,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACtH,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEN,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,KAAa;QAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,kBAAkB,OAAO,IAAI,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACvH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,OAAe;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,sBAAsB,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aAClH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,SAAS,CAAC,OAAe;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,mBAAmB,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aAC/G,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,kBAAkB,CAAC,EAAU,EAAE,MAAc;QAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,uBAAuB,EAAE,IAAI,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACxH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEN,CAAC;IAED,aAAa,CAAC,OAAe;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,cAAc,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aAC1G,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEN,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,GAAG,wEAAW,CAAC,MAAM,cAAc,OAAO,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aACpF,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EACjE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,wBAAwB,CAAC,OAAe,EAAE,MAAc,EAAE,QAAgB;QACxE,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,wBAAwB,OAAO,IAAI,MAAM,IAAI,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aAC1I,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,eAAe,CAAC,OAAe;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,oBAAoB,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aAChH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAGD,oBAAoB,CAAC,OAAe,EAAE,KAAc;QAClD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAAA,CAAC;QAExD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,gCAAgC,OAAO,IAAI,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACrI,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,OAAe;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,wBAAwB,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACpH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,OAAe;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,wEAAW,CAAC,MAAM,wBAAwB,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACpH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,oBAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACjC,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAChD;aAAM;YACL,oBAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACjC,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;CACF;;YAtQQ,+DAAU;YAMV,oEAAa;;AAKT,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CA2PxB;AA3PwB;;;;;;;;;;;;;;;;;;;;;;;;ACXsC;AACpB;AACG;AACG;AACU;AAEP;AACK;IAK5C,WAAW,SAAX,WAAW;IAOtB,YAAoB,IAAgB,EAAU,cAA8B,EAAU,aAA4B;QAA9F,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAL3G,UAAK,GAAG,EAAE,CAAC;QAEX,wBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;QACvD,iBAAY,GAAG,EAAE,CAAC;IAE6F,CAAC;IAEhH,UAAU,CAAC,IAAI;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,wEAAW,CAAC,MAAM,WAAW,EAAE,IAAI,EAAG,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aAC9F,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAChE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,OAAO,CAAC,iBAAyB;QAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,wEAAW,CAAC,MAAM,aAAa,iBAAiB,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC;aACzF,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAC7B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACL,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,wEAAW,CAAC,MAAM,mBAAmB,MAAM,EAAE,EAAE,EAAG,YAAY,EAAE,MAAM,EAAE,CAAE;aACrG,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEN,CAAC;IAED,cAAc,CAAC,MAAc,EAAE,OAAe;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,wEAAW,CAAC,MAAM,sBAAsB,MAAM,IAAI,OAAO,EAAE,EAAE,EAAG,YAAY,EAAE,MAAM,EAAE,CAAE;aACnH,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEN,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,wEAAW,CAAC,MAAM,oBAAoB,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACrG,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAGD,YAAY,CAAC,MAAc;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,wEAAW,CAAC,MAAM,oBAAoB,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAE;aACrG,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEN,CAAC;IAGD,WAAW,CAAC,KAAK;QACf,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,oBAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACjC,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAChD;aAAM;YACL,oBAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACjC,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;CACF;;YAzFQ,+DAAU;YAMV,+DAAc;YACd,oEAAa;;AAKT,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CA6EvB;AA7EuB","file":"default~driving-mode-driving-mode-module~order-details-order-details-module~travel-mode-travel-mode-module-es2015.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FavouriteOrder, Order } from 'src/_models';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  public selectedFavourite: FavouriteOrder;\r\n\r\n  public order: Order;\r\n  public orders = [];\r\n  public currentOrderId: string;\r\n\r\n  public driverId: string;\r\n  public completedOrder = false;\r\n  public alertForcomplete: string;\r\n\r\n  public chosenLocation: string;\r\n  public chosenDestination: string;\r\n\r\n  public userLocationLat: number;\r\n  public userLocationLong: number;\r\n\r\n  public userDestinationLat: number;\r\n  public userDestinationLong: number;\r\n\r\n\r\n  constructor(private http: HttpClient, private sharedService: SharedService) { }\r\n\r\n  public createOrder(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/order`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  addToFavourites(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/order/favourites`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMyFavourites(userId: string): Observable<FavouriteOrder[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<FavouriteOrder[]>(`${environment.apiUrl}/api/order/favourites/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteFavouriteOrder(orderId: string): Observable<FavouriteOrder> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.delete<FavouriteOrder>(`${environment.apiUrl}/api/order/favourites/${orderId}`, {headers})\r\n      .pipe(\r\n        tap(data => console.log('deleted favourite order: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public getDirections(locationLat, locationLng, destinationLat, destinationLng) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${locationLat},${locationLng}&destinations=${destinationLat}%2C${destinationLng}%7C&key=AIzaSyAEvlXdM4joG4bNVT5l-tJSk9lUSGhxMNw`, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getOrderById(id: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/id/${id}`, {headers})\r\n      .pipe(\r\n        tap(data => this.order = data)\r\n      );\r\n  }\r\n\r\n  getCanceledOrderById(id: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/canceled/${id}`, {headers})\r\n      .pipe(\r\n        tap(data => this.order = data)\r\n      );\r\n  }\r\n\r\n  getLastCompletedOrder(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/completed/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMyOrder(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getOrderForChat(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/chat/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  getNormalOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order/normal`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  getComfortOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order/comfort`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  acceptOrder(orderId: string, driverId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/${orderId}/${driverId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        tap(data => this.driverId = driverId),\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  updateOrderEta(orderId: string, value: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/eta/${orderId}/${value}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateDriverArrived(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/arrived/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  rateOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/rate/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  increaseOrderPrice(id: string, amount: number): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increase/${id}/${amount}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  completeOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  deleteOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.delete<Order>(`${environment.apiUrl}/api/order/${orderId}`, {headers})\r\n      .pipe(\r\n        tap(data => console.log('deleted order: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  driverIncreaseOrderPrice(orderId: string, amount: number, driverId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increased/${orderId}/${amount}/${driverId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  resetIncreasing(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/reset/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  increasedOrderAccept(orderId: string, value: boolean): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();;\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/accepted/increase/${orderId}/${value}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  incrementOrderPrice(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increment/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  decrementOrderPrice(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/decrement/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      console.log('Client side error.')\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      console.log('Server side error.')\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Trip } from 'src/_models';\r\nimport { AccountService } from '../account.service';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TripService {\r\n  public trip: Trip;\r\n  public trips = [];\r\n  public currentTripOrderId: string;\r\n  public currentTripDriverId = this.accountService.userValue.id;\r\n  public currentOrder = \"\";\r\n  \r\n  constructor(private http: HttpClient, private accountService: AccountService, private sharedService: SharedService) { }\r\n\r\n  public createTrip(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n    this.currentTripOrderId = data.orderId;\r\n    this.currentOrder = data.order;\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/trip`, data,  { headers, responseType: 'text' })\r\n      .pipe(\r\n        tap(data => console.log('created trip: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getTrip(applicationUserId: string): Observable<Trip> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Trip>(`${environment.apiUrl}/api/trip/${applicationUserId}`, {headers})\r\n      .pipe(\r\n        tap(data => this.trip = data),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  startTrip(tripId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/start/${tripId}`, {  responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  navigateToUser(tripId: string, orderId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/navigate/${tripId}/${orderId}`, {  responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  cancelTrip(tripId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/cancel/${tripId}`, { responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  completeTrip(tripId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/finish/${tripId}`, { responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      console.log('Client side error.')\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      console.log('Server side error.')\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}