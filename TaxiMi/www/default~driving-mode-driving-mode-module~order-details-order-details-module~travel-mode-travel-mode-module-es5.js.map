{"version":3,"sources":["webpack:///src/_services/order/order.service.ts","webpack:///src/_services/trip/trip.service.ts"],"names":["OrderService","http","sharedService","orders","completedOrder","data","headers","headerGerneration","post","apiUrl","responseType","pipe","handleError","userId","get","orderId","console","log","JSON","stringify","locationLat","locationLng","destinationLat","destinationLng","id","order","driverId","put","value","amount","error","errorMessage","ErrorEvent","message","status","providedIn","TripService","accountService","trips","currentTripDriverId","userValue","currentOrder","currentTripOrderId","applicationUserId","trip","tripId"],"mappings":"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","file":"default~driving-mode-driving-mode-module~order-details-order-details-module~travel-mode-travel-mode-module-es5.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FavouriteOrder, Order } from 'src/_models';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  public selectedFavourite: FavouriteOrder;\r\n\r\n  public order: Order;\r\n  public orders = [];\r\n  public currentOrderId: string;\r\n\r\n  public driverId: string;\r\n  public completedOrder = false;\r\n  public alertForcomplete: string;\r\n\r\n  public chosenLocation: string;\r\n  public chosenDestination: string;\r\n\r\n  public userLocationLat: number;\r\n  public userLocationLong: number;\r\n\r\n  public userDestinationLat: number;\r\n  public userDestinationLong: number;\r\n\r\n\r\n  constructor(private http: HttpClient, private sharedService: SharedService) { }\r\n\r\n  public createOrder(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/order`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  addToFavourites(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/order/favourites`, data, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMyFavourites(userId: string): Observable<FavouriteOrder[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<FavouriteOrder[]>(`${environment.apiUrl}/api/order/favourites/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteFavouriteOrder(orderId: string): Observable<FavouriteOrder> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.delete<FavouriteOrder>(`${environment.apiUrl}/api/order/favourites/${orderId}`, {headers})\r\n      .pipe(\r\n        tap(data => console.log('deleted favourite order: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public getDirections(locationLat, locationLng, destinationLat, destinationLng) {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.post(`https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${locationLat},${locationLng}&destinations=${destinationLat}%2C${destinationLng}%7C&key=AIzaSyAEvlXdM4joG4bNVT5l-tJSk9lUSGhxMNw`, { headers, responseType: 'text' })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getOrderById(id: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/id/${id}`, {headers})\r\n      .pipe(\r\n        tap(data => this.order = data)\r\n      );\r\n  }\r\n\r\n  getCanceledOrderById(id: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/canceled/${id}`, {headers})\r\n      .pipe(\r\n        tap(data => this.order = data)\r\n      );\r\n  }\r\n\r\n  getLastCompletedOrder(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/completed/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getMyOrder(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getOrderForChat(userId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order>(`${environment.apiUrl}/api/order/chat/${userId}`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  getNormalOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order/normal`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  getComfortOrders(): Observable<Order[]> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Order[]>(`${environment.apiUrl}/api/order/comfort`, {headers})\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  acceptOrder(orderId: string, driverId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/${orderId}/${driverId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        tap(data => this.driverId = driverId),\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  updateOrderEta(orderId: string, value: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/eta/${orderId}/${value}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateDriverArrived(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/arrived/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  rateOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/rate/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  increaseOrderPrice(id: string, amount: number): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increase/${id}/${amount}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  completeOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  deleteOrder(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.delete<Order>(`${environment.apiUrl}/api/order/${orderId}`, {headers})\r\n      .pipe(\r\n        tap(data => console.log('deleted order: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  driverIncreaseOrderPrice(orderId: string, amount: number, driverId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increased/${orderId}/${amount}/${driverId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  resetIncreasing(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/reset/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  increasedOrderAccept(orderId: string, value: boolean): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();;\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/accepted/increase/${orderId}/${value}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  incrementOrderPrice(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/increment/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  decrementOrderPrice(orderId: string): Observable<Order> {\r\n    const headers = this.sharedService.headerGerneration();\r\n\r\n    return this.http.put<Order>(`${environment.apiUrl}/api/order/decrement/${orderId}`, { headers, responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      console.log('Client side error.')\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      console.log('Server side error.')\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Trip } from 'src/_models';\r\nimport { AccountService } from '../account.service';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TripService {\r\n  public trip: Trip;\r\n  public trips = [];\r\n  public currentTripOrderId: string;\r\n  public currentTripDriverId = this.accountService.userValue.id;\r\n  public currentOrder = \"\";\r\n  \r\n  constructor(private http: HttpClient, private accountService: AccountService, private sharedService: SharedService) { }\r\n\r\n  public createTrip(data) {\r\n    const headers = this.sharedService.headerGerneration();\r\n    this.currentTripOrderId = data.orderId;\r\n    this.currentOrder = data.order;\r\n\r\n    return this.http.post(`${environment.apiUrl}/api/trip`, data,  { headers, responseType: 'text' })\r\n      .pipe(\r\n        tap(data => console.log('created trip: ', JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getTrip(applicationUserId: string): Observable<Trip> {\r\n    const headers = this.sharedService.headerGerneration();\r\n    return this.http.get<Trip>(`${environment.apiUrl}/api/trip/${applicationUserId}`, {headers})\r\n      .pipe(\r\n        tap(data => this.trip = data),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  startTrip(tripId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/start/${tripId}`, {  responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  navigateToUser(tripId: string, orderId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/navigate/${tripId}/${orderId}`, {  responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  cancelTrip(tripId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/cancel/${tripId}`, { responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  completeTrip(tripId: string): Observable<Trip> {\r\n    return this.http.put<Trip>(`${environment.apiUrl}/api/trip/finish/${tripId}`, { responseType: 'json' },)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      console.log('Client side error.')\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      console.log('Server side error.')\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"]}